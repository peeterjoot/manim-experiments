The rejection operator can be cast into triple cross product form.  Let's see how this works.

One very useful GA trick is to wrap an expression in a grade selection operator that does not change it.
 For example, we may write the rejection as the grade-1 selection of itself.
 Having done that, in R^3 we may use the cross product form of the wedge product (u-wedge-v = I u-cross-v).
 Now we have a vector-vector product, so may expand it as a dot product + wedge product, with each of these
  multiplied by I, the R^3 pseudoscalar (a trivector.)

 Trivector times scalar is a trivector, and the grade-1 selection of a trivector is zero.  That
 leaves us with a trivector-bivector product, which is always a vector in R^3.

 Once again the wedge product can be expanded as I times the cross product, leaving us with
 an I^2 = -1.
 One final permutation and sign change to tidy things up, and we find a compact representation of the R^3 rejection operator.

A comment on interpretation:

 In GA, the wedge of v with uhat selects just the portion of v that has no component along the direction of u, but that
  wedge produces a bivector.  However, this bivector, when multiplied by uhat rotates uhat 90 degrees.

 In the double cross product form, the first cross product produces a vector that has the magnitude of the rejection, but directed
  normal to the plane of u and v.
 One additional cross product rotates this normal into the desired orientation.
 In both cases, we have a 90 degree rotation to orient the non-projective component of v, but in the GA case, that rotation is
 constrained to the plane of u and v, instead of utilizing a normal direction that is not well defined for N != 3.
